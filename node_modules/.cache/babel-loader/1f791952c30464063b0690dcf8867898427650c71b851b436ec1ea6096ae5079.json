{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/asus/Desktop/Codes/Web Developmet/netflix-clone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/asus/Desktop/Codes/Web Developmet/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/asus/Desktop/Codes/Web Developmet/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import axios from'../../axios';import'./Row.css';import YouTube from\"react-youtube\";import movieTrailer from'movie-trailer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base_url=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var request;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);var opts={height:\"390\",width:\"99%\",playerVars:{autoplay:0}};var handleClick=function handleClick(movie){// console.table(movie?.title)\nif(trailerUrl){setTrailerUrl('');}else{movieTrailer((movie===null||movie===void 0?void 0:movie.title)||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get('v'));}).catch(function(error){return console.log(error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},className:\"row__poster  \".concat(isLargeRow&&\"row__posterLarge\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","movieTrailer","jsx","_jsx","jsxs","_jsxs","base_url","Row","_ref","title","fetchUrl","isLargeRow","_useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","trailerUrl","setTrailerUrl","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_callee$","_context","prev","next","get","sent","data","results","abrupt","stop","opts","height","width","playerVars","autoplay","handleClick","movie","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","className","children","map","onClick","concat","src","poster_path","backdrop_path","alt","name","id","videoId"],"sources":["C:/Users/asus/Desktop/Codes/Web Developmet/netflix-clone/src/component/Row/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../../axios';\r\nimport './Row.css';\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"99%\",\r\n        playerVars: {\r\n            autoplay: 0,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        // console.table(movie?.title)\r\n        if (trailerUrl) {\r\n            setTrailerUrl('')\r\n        } else {\r\n            movieTrailer(movie?.title || \"\")\r\n                .then(url => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get('v'));\r\n                }).catch((error) => console.log(error));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n\r\n            <div className={\"row__posters\"}>\r\n\r\n                {movies.map(movie => (\r\n                    <img key={movie.id}\r\n                        onClick={() => handleClick(movie)}\r\n                        className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}